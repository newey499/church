<?php
	/******************************
	  Need to include classes that are passed in $_SESSION
	  before instantiating the session
	  ********************************************/
	require_once("../buildform.php");

	/******************************
		Start a session. This must be the very first thing done on the page.
	**********************************/
	require_once("../session.php");
	$oSession = new session();

	require_once "../globals.php";
	require_once("../mysql.php");
	require_once("../genlib.php");

?>

<html>
<!-- Generated by AceHTML Freeware http://freeware.acehtml.com -->
<!-- Creation date: 02/12/2004 -->
<head>

	<title>Site Configuration</title>

<?php
	include_once("../nocache.php");						// Stop clients from cacheing - hopefully
?>

	<meta name="description" content="">
	<meta name="keywords" content="">
	<meta name="author" content="Chris Newey">
	<meta name="generator" content="AceHTML 5 Freeware">

  <!-- CSS Includes -->
  <link rel="stylesheet" type="text/css" href="../css/layout.css" >
  <link rel="stylesheet" type="text/css" href="../css/church.css" >
  <link rel="stylesheet" type="text/css" href="../css/slideshow.css" >
  <link rel="stylesheet" type="text/css" href="../css/tooltip.css" >
  <link rel="stylesheet" type="text/css" media="print" href="../css/print.css" >
  <link rel="stylesheet" type="text/css" href="../css/cssdropdownmenu.css" />
  <!-- End CSS Includes -->

</head>
<body>

<!-- ========================================================================== -->
<!--                            Start of CSS Layout                             -->
<!-- ========================================================================== -->
<div id="maincontainer">

<!-- ------------------ HEADER --------------------------------------- -->

<?php

require_once('topbanner.php');

?>



<hr />
<!-- ---------------- END HEADER ------------------------------------- -->



<?php

// Returns a form object set up as required
function buildFormObject() {

	// If the object isn't in the session then create the object
	// and stash it in the session. If its an insert or a delete always
	// force a new object
	if	($_GET['opcode'] == VALIDATE_WRITE_REC) {
		// There should already be an object stashed in the session
		$obj = $_SESSION['oMenus'];
	}
	else
  {
		// sysconf only ever has one row
    // lastupdated is not edited here - it has its own page
		// lastupdated.php
		$query = "SELECT	id,
											lastupdated,
								 			menutypes,
											showmenuhdr
						  FROM sysconf
							WHERE id = 1";

		$pkey = array('id'	=> 1);

		$obj = new buildForm($_GET['opcode'],$query,$pkey, isset($flds) ? $flds : null);

		// We should never bo doing an insert on the sysconf table
		$isInsert = false;
		$obj->addField('menutypes','Menu Type',
						($isInsert ? 'MENU_PAGE' : safePost('menutypes')),
						'Select');
		$obj->addField('showmenuhdr','Menu Hdrs',
						($isInsert ? 'NO' : safePost('showmenuhdr')),
						'Whether to display Menu Hdrs/Titles');

		//$obj->addMessageCol('contact','qwerty');
		//$obj->addMessageCol('town','TOWN');

		//$obj->addErrorMessageCol('mobile','mobile error');

		// $obj->submitTarget = "sqlorg.php";
		$args = http_build_query(array('opcode' => VALIDATE_WRITE_REC,
																	 'subcode' => $_GET['opcode']	));
		$obj->submitTarget = "editsysconf.php?$args";
		$obj->pkey = array('id' => safeGet('id'));

		$obj->addLink("index.php","Admin");	// Add a link to take us back to the Admin page
		$obj->addLink("../index.php","Home");			// Add a link to take us back to the Home page

		// Increase the size of the text entry area
		$obj->textarearows = 20;
		$obj->textareacols = 80;


		// Stash the object in the session
		$_SESSION['oMenus'] = $obj;
	}

	return $obj;
}

/*********************
 Validate fields to be written to row
 ****************************************/
function validate($opcode)
{
	return true;
}



/********************
 Add/Amend/Delete SQL
 ***********************/
function doSQL($mysqli, $opcode)
{


	switch ($opcode) {
		case INSERT_REC:
			$stmnt = sprintf("INSERT INTO sysconf
												(
													menutypes, showmenuhdr
												)
												VALUES
												(
													'%s', '%s'
												)",
												mysql_real_escape_string($_POST['menutypes']),
												mysql_real_escape_string($_POST['showmenuhdr'])
												);
			$msg = "New record created OK";
			break;

		case UPDATE_REC:
			$stmnt = sprintf("UPDATE sysconf
												SET
													menutypes = '%s',
													showmenuhdr = '%s'
												WHERE id=%d",
												mysql_real_escape_string($_POST['menutypes']),
												mysql_real_escape_string($_POST['showmenuhdr']),
												$_POST['id']
												);
			$msg = "Record updated OK";
			break;

		case DELETE_REC:
			$stmnt = sprintf("DELETE FROM sysconf
											 WHERE id=%d",
											 $_POST['id']
											);

			$msg = "Record Deleted OK";
			break;
		default:
			break;
	}

	if (mysql_query($stmnt)) {
    setLastupdatedDate( date('d/m/Y'), date('H:i'));
		print("<p>" . $msg . "</p>\n");
		return True;
	}
	else {
		print("<p>" . mysql_error() . "</p>\n");
		return False;
	}

}



/****************************************************************
 ****************************************************************

	Script Entry Point
	==================

 **************************************************************************
 **************************************************************************/

// if the $_POST array is filled then try and write the update
// otherwise display the form
if (safeGet('update') == UPDATE_REC)
{
	$_GET['opcode'] = VALIDATE_WRITE_REC;
}
else
{
	$_GET['opcode'] = UPDATE_REC;
}



$obj = buildFormObject();


switch (safeGet('opcode')) {
	case INSERT_REC:
		print "<h3>Insert new Sysconf</h3>\n";
		print "<h4>Not Supported</h4>\n";
		//$obj->exec($opcode);
		break;

	case UPDATE_REC:
		print "<h3>Update Sysconf</h3>\n";
		$obj->exec(isset($opcode) ? $opcode : "");
		break;

	case DELETE_REC:
		print "<h3>Delete Sysconf</h3>\n";
		print "<h4>Not Supported</h4>\n";
		//$obj->exec($opcode);
		break;

	case VALIDATE_WRITE_REC:
		print "<h3>Update Sysconf</h3>\n";
		/* Connect to a MySQL server */
		$dbHandle = mysql_connect(MYSQL_SERVER, MYSQL_USERNAME, MYSQL_PASSWORD)
		   or die('Could not connect: ' . mysql_error());

		mysql_select_db(MYSQL_DATABASE)  or die('Could not select database');

		if (validate($_GET['subcode'])){
			if (doSQL($dbHandle, $_GET['subcode'])) {
				unset($_SESSION['oMenus']);
				/**********************
				print "<SCRIPT LANGUAGE=JavaScript>\n";
				print "window.location.href =\"borgs.php\"\n";
				print "</SCRIPT>\n";
				***************************/
				buildMenuItem("index.php","Admin");	// Add a link to take us back to the Admin page
				buildMenuItem("../index.php","Home");			// Add a link to take us back to the Home page
			}
		}
		else {
			print "<h3>Problems with form entries indicated by " .
						"<SPAN id=\"error\">*</SPAN>" .
						"</h3>";
			$obj->refreshFromPost = True;
			$obj->exec($opcode);
		}
		break;

		default:
			die('Invalid option ['  . $opcode . '] passed to ' . $_SERVER['SCRIPT_NAME']);
			break;
}








?>
</P>

<!-- ------------------ FOOTER --------------------------------------- -->
<HR>


</div> <!-- End div  id="maincontainer"> -->
<!-- ========================================================================== -->
<!--                            End of CSS Layout                               -->
<!-- ========================================================================== -->


</body>
</html>
<!-- ---------------- END FOOTER ------------------------------------- -->
